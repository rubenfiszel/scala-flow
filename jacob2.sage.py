
# This file was *autogenerated* from the file ./jacob2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1)#!/usr/bin/env sage

from sage.all import *

Q = QuaternionAlgebra(SR, -_sage_const_1 , -_sage_const_1 , names=('i', 'j', 'k',)); (i, j, k,) = Q._first_ngens(3)

var('q0, q1, q2, q3')
var('ax, ay, az')

q = q0 + q1*i + q2*j + q3*k
v = ax*i + ay*j + az*k

nq = q*v*q.conjugate()

v = vector(nq.coefficient_tuple())
vs = map(lambda x: x.canonicalize_radical().full_simplify(), v)

print(vs)

for sym in [ax, ay, az, q0, q1, q2, q3]:
    d = diff(vector(vs), sym)
    exps = map(lambda x: x.canonicalize_radical().full_simplify(), d)[_sage_const_1 :]
    for i, e in enumerate(exps):
        print(sym, i, e) 

